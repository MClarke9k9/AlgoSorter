{"version":3,"sources":["components/Bar.js","components/Form.js","algorithms/helpers.js","algorithms/bubbleSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","App.js","serviceWorker.js","index.js"],"names":["Bar","style","height","length","backgroundColor","colorKey","className","Form","formLabel","values","labels","currentValue","onChange","FormControl","FormLabel","RadioGroup","value","map","index","FormControlLabel","control","Radio","label","swap","array","indexA","indexB","temp","insertStep","arrayNew","position","arraySteps","currentStep","slice","splice","push","bubbleSort","colorSteps","i","j","Array","fill","merge","arrayA","arrayB","shift","updateColor","concat","start","end","mergeSort","mid","Math","floor","quickSort","A","B","C","middleValue","sort","indexOf","pickPivot","pivot","key","bigIndex","max","App","state","timeouts","algorithm","barCount","delay","ALGO_SET","generateSteps","steps","setState","stepBack","clearTimeouts","stepForward","changeAlgorithm","event","target","clearColorKey","changeBarCount","generateBars","changeDelay","parseInt","forEach","timeout","clearTimeout","blankKey","barsTemp","random","this","setTimeout","playButton","barsDiv","IconButton","color","onClick","Pause","RotateLeft","setTimeouts","PlayArrow","SkipPrevious","SkipNext","e","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b9b5ae40.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./Bar.css\"\r\n\r\nfunction Bar({ length, colorKey }) {\r\n  const COLOR_SET = [\"grey\", \"orange\", \"green\"];\r\n\r\n  let color = COLOR_SET[colorKey];\r\n\r\n  let style = {\r\n    height: length,\r\n    backgroundColor: color,\r\n  }\r\n\r\n  return (\r\n    <div className=\"bar\" style={style} ></div>\r\n  )\r\n}\r\n\r\nexport default Bar;","import React from 'react';\r\nimport { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nexport default function Form({ formLabel, values, labels, currentValue, onChange }) {\r\n  return (\r\n    <div className=\"card container-small\">\r\n      <FormControl>\r\n        <FormLabel>{formLabel}</FormLabel>\r\n        <RadioGroup value={currentValue} onChange={onChange}>\r\n          {values.map((value, index) => {\r\n            return (<FormControlLabel\r\n              key={`${value}_${index}`}\r\n              value={values[index]}\r\n              control={<Radio />}\r\n              label={labels[index]} />);\r\n          })}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n}","export function swap(array, indexA, indexB) {\r\n    let temp = array[indexA];\r\n    array[indexA] = array[indexB];\r\n    array[indexB] = temp;\r\n    return array;\r\n  }\r\n  \r\n  export function insertStep(arrayNew, position, arraySteps) {\r\n    let currentStep = arraySteps[arraySteps.length - 1].slice();\r\n    currentStep.splice(position, arrayNew.length, ...arrayNew);\r\n    arraySteps.push(currentStep);\r\n  }","import { swap } from './helpers';\r\n\r\nconst bubbleSort = (array, position, arraySteps, colorSteps) => {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n\r\n  for (let i = 0; i < array.length - 1; i++) {\r\n    for (let j = 0; j < array.length - i - 1; j++) {\r\n      if (array[j] > array[j + 1]) {\r\n        array = swap(array, j, j + 1);\r\n      }\r\n      arraySteps.push(array.slice());\r\n      colorKey[j] = 1;\r\n      colorKey[j + 1] = 1;\r\n      colorSteps.push(colorKey.slice());\r\n      colorKey[j] = 0;\r\n      colorKey[j + 1] = 0;\r\n    }\r\n    colorKey[array.length - 1 - i] = 2;\r\n    arraySteps.push(array.slice());\r\n    colorSteps.push(colorKey.slice());\r\n  }\r\n\r\n  // Remaining bars become green\r\n  colorSteps[colorSteps.length - 1] = new Array(array.length).fill(2);\r\n  return;\r\n}\r\n\r\nexport default bubbleSort;","import { insertStep } from './helpers';\r\n\r\nfunction mergeSort(array, position, arraySteps, colorSteps) {\r\n  if (array.length === 1) return array;\r\n  let mid = Math.floor(array.length / 2);\r\n\r\n  // Split and work recursively\r\n  let arrayA = mergeSort(array.slice(0, mid), position, arraySteps, colorSteps);\r\n  let arrayB = mergeSort(array.slice(mid), position + mid, arraySteps, colorSteps);\r\n\r\n  let arrayNew = merge(arrayA, arrayB, position, arraySteps, colorSteps);\r\n  arraySteps.push(arraySteps[arraySteps.length - 1].slice());\r\n  colorSteps.push(colorSteps[colorSteps.length - 1].fill(arrayNew.length === arraySteps[0].length ? 2 : 0));\r\n  return arrayNew;\r\n}\r\n\r\nconst merge = (arrayA, arrayB, position, arraySteps, colorSteps) => {\r\n  let arrayNew = [];\r\n  let A = 0;\r\n  let B = 0;\r\n\r\n  while (arrayA.length > 0 && arrayB.length > 0) {\r\n    if (arrayA[A] < arrayB[B]) {\r\n      arrayNew.push(arrayA.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    } else {\r\n      arrayNew.push(arrayB.shift());\r\n      insertStep(arrayNew, position, arraySteps);\r\n    }\r\n    updateColor(position, colorSteps, arrayNew.length - 1, [], []);\r\n  }\r\n\r\n  // concatenate remaining values\r\n\r\n  if (arrayA.length !== 0 || arrayB.length !== 0) {\r\n    updateColor(position, colorSteps, arrayNew.length, arrayA, arrayB);\r\n    arrayNew = arrayNew.concat(arrayA);\r\n    arrayNew = arrayNew.concat(arrayB)\r\n    insertStep(arrayNew, position, arraySteps);\r\n  }\r\n\r\n  return arrayNew;\r\n}\r\n\r\nfunction updateColor(position, colorSteps, start, arrayA, arrayB) {\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  let end = position + start + arrayA.length + arrayB.length;\r\n  start = start + position;\r\n\r\n  if (end === start) {\r\n    colorKey.fill(1, start, end + 1);\r\n  } else {\r\n    colorKey.fill(1, start, end);\r\n  }\r\n  colorSteps.push(colorKey);\r\n}\r\n\r\nexport default mergeSort;","import { swap, insertStep } from './helpers';\r\n\r\nconst quickSort = (array, position, arraySteps, colorSteps) => {\r\n  if (array.length < 2) {\r\n    insertStep(array, position, arraySteps);\r\n\r\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n    colorKey[position] = 2;\r\n    colorSteps.push(colorKey);\r\n    return;\r\n  }\r\n\r\n  // pick median of three numbers as pivot and sent it to back\r\n  swap(array, pickPivot(array), array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  colorSteps.push(colorSteps[colorSteps.length - 1].slice());\r\n\r\n  let pivot = array[array.length - 1];\r\n  let A = 0;\r\n  let B = array.length - 1;\r\n\r\n  // swap small value from right with big value from left\r\n  while (A < B) {\r\n    while (array[A] < pivot) {\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n      A++;\r\n    }\r\n    while (array[B] >= pivot) {\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n      B--;\r\n    }\r\n    if (A < B) {\r\n      swap(array, A, B);\r\n      insertStep(array, position, arraySteps);\r\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\r\n      colorKey[position + A] = 1;\r\n      colorKey[position + B] = 1;\r\n      colorSteps.push(colorKey);\r\n    }\r\n  }\r\n\r\n  // swap big value with pivot\r\n  let bigIndex = Math.max(A, B);\r\n\r\n  swap(array, bigIndex, array.length - 1);\r\n  insertStep(array, position, arraySteps);\r\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\r\n  colorKey[position + bigIndex] = 2;\r\n  colorSteps.push(colorKey);\r\n\r\n  // recurse on two halves\r\n  quickSort(array.slice(0, A), position, arraySteps, colorSteps);\r\n  quickSort(array.slice(A + 1), position + A + 1, arraySteps, colorSteps);\r\n\r\n  return;\r\n}\r\n\r\nfunction pickPivot(array) {\r\n  let A = array[0];\r\n  let B = array[Math.floor(array.length / 2)];\r\n  let C = array[array.length - 1];\r\n\r\n  let middleValue = [A, B, C].sort()[1];\r\n  let middleIndex = array.indexOf(middleValue);\r\n\r\n  return middleIndex;\r\n}\r\n\r\nexport default quickSort;","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { PlayArrow, Pause, SkipPrevious, SkipNext, RotateLeft } from '@material-ui/icons';\nimport Bar from './components/Bar';\nimport Form from './components/Form';\n\n// style\nimport './App.css';\n\n// algorithms\nimport bubbleSort from './algorithms/bubbleSort';\nimport mergeSort from './algorithms/mergeSort';\nimport quickSort from './algorithms/quickSort';\n\nclass App extends React.Component {\n  state = {\n    array: [],\n    colorKey: [],\n    arraySteps: [],\n    colorSteps: [],\n    currentStep: 0,\n    timeouts: [],\n    algorithm: 'Bubble Sort',\n    barCount: 10,\n    delay: 200,\n  }\n\n  ALGO_SET = {\n    'Bubble Sort': bubbleSort,\n    'Merge Sort': mergeSort,\n    'Quick Sort': quickSort,\n  }\n\n  componentDidMount() {\n    this.generateBars();\n  }\n\n  generateSteps = () => {\n    let array = this.state.array.slice();\n    let steps = this.state.arraySteps.slice();\n    let colorSteps = this.state.colorSteps.slice();\n\n    this.ALGO_SET[this.state.algorithm](array, 0, steps, colorSteps);\n\n    this.setState({\n      arraySteps: steps,\n      colorSteps: colorSteps,\n    });\n  }\n\n  setTimeouts() {\n    let steps = this.state.arraySteps;\n    let colorSteps = this.state.colorSteps;\n\n    this.clearTimeouts();\n    let timeouts = [];\n    let i = 0;\n\n    while (i < steps.length - this.state.currentStep) {\n      let timeout = setTimeout(() => {\n        let currentStep = this.state.currentStep;\n        this.setState({\n          array: steps[currentStep],\n          colorKey: colorSteps[currentStep],\n          currentStep: currentStep + 1,\n        });\n      }, this.state.delay * (i));\n      timeouts.push(timeout);\n      i++;\n    }\n\n    this.setState({\n      timeouts: timeouts,\n    });\n  }\n\n  stepBack = () => {\n    if (this.state.currentStep === 0) return;\n    this.clearTimeouts();\n\n    let currentStep = this.state.currentStep - 1;\n    this.setState({\n      array: this.state.arraySteps[currentStep],\n      colorKey: this.state.colorSteps[currentStep],\n      currentStep: currentStep,\n    });\n  }\n\n  stepForward = () => {\n    if (this.state.currentStep >= this.state.arraySteps.length - 1) return;\n    this.clearTimeouts();\n\n    let currentStep = this.state.currentStep + 1;\n    this.setState({\n      array: this.state.arraySteps[currentStep],\n      colorKey: this.state.colorSteps[currentStep],\n      currentStep: currentStep,\n    });\n  }\n\n  changeAlgorithm = (event) => {\n    this.setState({\n      algorithm: event.target.value,\n      currentStep: 0,\n      arraySteps: [this.state.arraySteps[this.state.currentStep === 0 ? 0 : this.state.currentStep - 1]],\n    }, () => this.generateSteps());\n    this.clearTimeouts();\n    this.clearColorKey();\n  };\n\n  changeBarCount = (barCount) => {\n    this.setState({ barCount: barCount }, () => this.generateBars());\n  }\n\n  changeDelay = (event) => {\n    this.clearTimeouts();\n    this.setState({\n      delay: parseInt(event.target.value),\n    });\n  };\n\n  clearTimeouts = () => {\n    this.state.timeouts.forEach(timeout => clearTimeout(timeout));\n    this.setState({\n      timeouts: [],\n    })\n  }\n\n  clearColorKey = () => {\n    let blankKey = new Array(parseInt(this.state.barCount)).fill(0);\n    this.setState({\n      colorKey: blankKey,\n      colorSteps: [blankKey],\n    });\n  }\n\n  generateBars = () => {\n    this.clearTimeouts();\n    this.clearColorKey();\n\n    let barCount = parseInt(this.state.barCount);\n    let barsTemp = [];\n\n    for (let i = 0; i < barCount; i++) {\n      barsTemp.push(Math.floor(Math.random() * 90) + 10);\n    }\n\n    this.setState({\n      array: barsTemp,\n      arraySteps: [barsTemp],\n      barCount: barCount,\n      currentStep: 0,\n    }, () => this.generateSteps());\n  }\n\n  render() {\n    let barsDiv = this.state.array.map((value, index) => <Bar\n      key={index}\n      length={value}\n      colorKey={this.state.colorKey[index]}\n    />);\n    let playButton;\n\n    // Set player controls\n    if (this.state.timeouts.length !== 0 && this.state.currentStep !== this.state.arraySteps.length) {\n      playButton = (\n        <IconButton color=\"secondary\" onClick={() => this.clearTimeouts()} >\n          <Pause />\n        </IconButton>\n      );\n    } else if (this.state.currentStep === this.state.arraySteps.length) {\n      playButton = (\n        <IconButton color=\"secondary\" onClick={() => this.generateBars()} >\n          <RotateLeft />\n        </IconButton>\n      )\n    } else {\n      playButton = (\n        <IconButton color=\"secondary\" onClick={() => this.setTimeouts()} >\n          <PlayArrow />\n        </IconButton>);\n    }\n\n    return (\n      <div className=\"App\">\n        <section className=\"bars container card\">\n          {barsDiv}\n        </section>\n\n        <section className=\"container-small\">\n          <IconButton color=\"secondary\" onClick={() => this.generateBars()} >\n            <RotateLeft />\n          </IconButton>\n          <IconButton color=\"secondary\" onClick={this.stepBack} >\n            <SkipPrevious />\n          </IconButton>\n          {playButton}\n          <IconButton color=\"secondary\" onClick={this.stepForward} >\n            <SkipNext />\n          </IconButton>\n          <IconButton />\n        </section>\n\n        <section className=\"controls container-small\">\n          <Form\n            formLabel=\"Algorithm\"\n            values={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\n            labels={['Bubble Sort', 'Merge Sort', 'Quick Sort']}\n            currentValue={this.state.algorithm}\n            onChange={this.changeAlgorithm}\n          />\n\n          <Form\n            formLabel=\"Array size\"\n            values={[10, 25, 50]}\n            labels={['10 items', '25 items', '50 items']}\n            currentValue={this.state.barCount}\n            onChange={e => this.changeBarCount(e.target.value)}\n          />\n\n          <Form\n            formLabel=\"Speed\"\n            values={[200, 100, 50]}\n            labels={['1x', '2x', '4x']}\n            currentValue={this.state.delay}\n            onChange={this.changeDelay}\n          />\n        </section>\n        <h3 className=\"name\">Created by &copy; Mark Clarke</h3>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}